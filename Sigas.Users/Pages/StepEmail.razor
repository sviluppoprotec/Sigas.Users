@page "/stepemail"
@using Sigas.Users.Pages;
@inherits Sigas.Users.Classes.SigasBasePage
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavManager
@inject IConfiguration configuration;

<h3>Recupero password</h3>
<h4>Inserisci l'email'</h4>

<div class="container">
    <div class="row align-items-start" hidden="@Sent">
        <div class="col-12 col-sm-12 col-md-3 col-lg-3">
            Email
        </div>
        <div class="col-12 col-sm-12 col-md-6 col-lg-6">
            <input type="text" name="email" id="email" class="text-box" @bind="email" />
        </div>
        <div class="col-12 col-sm-12 col-md-3 col-lg-3">
            <button type="button" @onclick="SendEmail">Invia</button>
        </div>
    </div>

    <div class="row align-items-start" hidden="@(!Sent)">
      <div class="col-12 col-sm-12 col-md-12 col-lg-12">
            Abbiamo inviato un email a @email con il link per impostare la nuova password
      </div>
   </div>

    <div class="row align-items-start" hidden="@(!Error)">
      <div class="col-12 col-sm-12 col-md-12 col-lg-12">
            Errore nell'operazione
      </div>
   </div>
</div>

@code {

    public string email { get; set; } = string.Empty;
    public string message { get; set; } = string.Empty;
    [Parameter]
    public bool Sent { get; set; } = false;
    [Parameter]
    public bool Error { get; set; } = false;
    private async void SendEmail()
    {

        //await Task.Delay(1);
        var stepEmail = new StepEmailHandler(ClientFactory, configuration);
        Sent = await stepEmail.SendEmailAsync(email);
        Error = !Sent;
        // Call StateHasChanged to trigger a re-render of the page
        await InvokeAsync(StateHasChanged);

    }


    //public override async Task SetParametersAsync(ParameterView parameters)
    //{
    //    if (parameters.TryGetValue<bool>(nameof(Sent), out var value))
    //    {
    //        if (value)
    //        {
    //            message = "The value of 'Param' is null.";
    //        }
    //        else
    //        {
    //            message = $"The value of 'Param' is {value}.";
    //        }
    //    }

    //    await base.SetParametersAsync(parameters);
    //}
}
